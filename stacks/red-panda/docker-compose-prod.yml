version: '3.8'
name: red-panda
services:

  ####### Red Panda #######
  broker-0:
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.4
    container_name: broker-0
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9644/v1/status/ready"]
    command:
      - redpanda start
      - --overprovisioned
      - --smp 1
      - --memory 1G
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://broker-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://broker-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr broker-0:33145
      - --advertise-rpc-addr broker-0:33145
      - --mode dev-container
      - --default-log-level=debug
    volumes:
      - broker-0:/var/lib/redpanda/data
    networks:
      - broker-network
    expose:
      - "19092"
      - "18082"
      - "18081"
      - "33145"
      - "9644"
      - "9092"
      - "8081"

  broker-1:
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.4
    container_name: broker-1
    restart: unless-stopped
    depends_on:
      - broker-0
    command:
      - redpanda start
      - --overprovisioned
      - --smp 1
      - --memory 1G
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://broker-1:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://broker-1:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr broker-1:33145
      - --advertise-rpc-addr broker-1:33145
      - --mode dev-container
      - --default-log-level=debug
      - --seeds broker-0:33145
    volumes:
      - broker-1:/var/lib/redpanda/data
    networks:
      - broker-network
    expose:
      - "19092"
      - "18082"
      - "18081"
      - "33145"
      - "9644"
      - "9092"
      - "8081"

  broker-2:
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.4
    container_name: broker-2
    restart: unless-stopped
    depends_on:
      - broker-0
    command:
      - redpanda start
      - --overprovisioned
      - --smp 1
      - --memory 1G
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://broker-2:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://broker-2:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr broker-2:33145
      - --advertise-rpc-addr broker-2:33145
      - --mode dev-container
      - --default-log-level=debug
      - --seeds broker-0:33145
    volumes:
      - broker-2:/var/lib/redpanda/data
    networks:
      - broker-network
    expose:
      - "19092"
      - "18082"
      - "18081"
      - "33145"
      - "9644"
      - "9092"
      - "8081"

  red-panda-ui:
    container_name: red-panda-ui
    image: docker.redpanda.com/redpandadata/console:v2.3.10
    restart: unless-stopped
    depends_on:
      - broker-0
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["broker-0:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://broker-0:8081"]
        server:
          basePath: /redpanda
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://broker-0:9644"]
    networks:
      - broker-network
      - portainer_proxy-network
    expose:
      - "8080"
    ports:
      - "8080:8080"

#########################

##### DOCKER VOLUME #####
volumes:
  broker-0:
  broker-1:
  broker-2:
#########################

##### DOCKER NETWORK ####
networks:
  broker-network:
  portainer_proxy-network:
    external: true
#########################
